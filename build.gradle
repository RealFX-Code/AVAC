plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	maven {
		url = "https://api.modrinth.com/maven"
	}
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/releases/'
		content {
			includeGroup "com.terraformersmc"
		}
	}
}

loom {
	// Loom and Loader both use this block in order to gather more information about your mod.
	mods {
		// This should match your mod id.
		"avac" {
			// Tell Loom about each source set used by your mod here. This ensures that your mod's classes are properly transformed by Loader.
			sourceSet("main")
			// If you shade (directly include classes, not JiJ) a dependency into your mod, include it here using one of these methods:
			// dependency("com.example.shadowedmod:1.2.3")
			// configuration("exampleShadedConfigurationName")
		}
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	// Minecraft
	minecraft libs.minecraft

	// Quilt stuff
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.quilt.loader
	modImplementation libs.bundles.quilted.fabric.api

	// Dependencies of the AvAC
	modImplementation libs.modmenu
	modImplementation libs.midnightlib

	// Remove fabric-api and fabric-loader from being added as dependencies of dependencies.
	project.configurations.configureEach {
		exclude(group: "net.fabricmc", module: "fabric-loader")
		exclude(group: "net.fabricmc.fabric-api")
	}

}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
